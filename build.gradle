plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'io.github.edsoncunha.upgrade'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'

var testContainersVersion = "1.17.6"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-log4j2"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
    testImplementation "org.testcontainers:postgresql:$testContainersVersion"

    runtimeOnly "org.postgresql:postgresql"

    implementation "org.flywaydb:flyway-core"

    configurations.every { it.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'}

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.2.0'

    implementation 'org.springframework.retry:spring-retry:1.3.3'
    testImplementation("org.assertj:assertj-core:3.24.2")


}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    jvmArgs '-Duser.timezone=UTC'
}

bootRun {
    jvmArgs '-Duser.timezone=UTC'
}

bootBuildImage {
    imageName="campingsite-app" // will be available at docker.io/library/campingsite-app:latest
    runImage="openjdk:19" // registry.hub.docker.com/library/
}